name: orchestrate-e2e-tests

on:
  workflow_run:
    workflows: ["gateway-contracts-docker-build", "connector-docker-build", "host-docker-build", "gateway-docker-build"]
    types:
      - completed
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: {}

concurrency:
  group: orchestrate-e2e-tests-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  collect-images:
    name: orchestrate-e2e-tests/collect-images
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    permissions:
      actions: 'read'
      contents: 'read'
    runs-on: ubuntu-latest
    outputs:
      connector_version: ${{ steps.extract.outputs.connector_version }}
      db_migration_version: ${{ steps.extract.outputs.db_migration_version }}
      host_version: ${{ steps.extract.outputs.host_version }}
      gateway_version: ${{ steps.extract.outputs.gateway_version }}
      host_listener_version: ${{ steps.extract.outputs.host_listener_version }}
      gateway_listener_version: ${{ steps.extract.outputs.gateway_listener_version }}
      tx_sender_version: ${{ steps.extract.outputs.tx_sender_version }}
      tfhe_worker_version: ${{ steps.extract.outputs.tfhe_worker_version }}
      sns_worker_version: ${{ steps.extract.outputs.sns_worker_version }}
      zkproof_worker_version: ${{ steps.extract.outputs.zkproof_worker_version }}
    steps:
      - name: Extract image versions
        id: extract
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            # Get the triggering workflow run
            workflow_run_id="${{ github.event.workflow_run.id }}"
            workflow_name="${{ github.event.workflow_run.name }}"
            
            # Extract image version from workflow run artifacts or outputs
            image_tag=$(gh api repos/${{ github.repository }}/actions/runs/${workflow_run_id}/jobs --jq '.jobs[0].steps[] | select(.name | contains("outputs")) | .conclusion')
            
            # Set default to PR number or commit SHA
            default_version="${{ github.event.workflow_run.head_sha }}"
            
            case "$workflow_name" in
              "gateway-contracts-docker-build")
                echo "gateway_version=${default_version}" >> $GITHUB_OUTPUT
                ;;
              "connector-docker-build")
                echo "connector_version=${default_version}" >> $GITHUB_OUTPUT
                ;;
              "host-docker-build")
                echo "host_version=${default_version}" >> $GITHUB_OUTPUT
                echo "host_listener_version=${default_version}" >> $GITHUB_OUTPUT
                ;;
              "gateway-docker-build")
                echo "gateway_listener_version=${default_version}" >> $GITHUB_OUTPUT
                ;;
            esac
          else
            # For pull requests, use PR number as tag
            pr_tag="pr-${{ github.event.number }}"
            echo "connector_version=${pr_tag}" >> $GITHUB_OUTPUT
            echo "db_migration_version=${pr_tag}" >> $GITHUB_OUTPUT
            echo "host_version=${pr_tag}" >> $GITHUB_OUTPUT
            echo "gateway_version=${pr_tag}" >> $GITHUB_OUTPUT
            echo "host_listener_version=${pr_tag}" >> $GITHUB_OUTPUT
            echo "gateway_listener_version=${pr_tag}" >> $GITHUB_OUTPUT
            echo "tx_sender_version=${pr_tag}" >> $GITHUB_OUTPUT
            echo "tfhe_worker_version=${pr_tag}" >> $GITHUB_OUTPUT
            echo "sns_worker_version=${pr_tag}" >> $GITHUB_OUTPUT
            echo "zkproof_worker_version=${pr_tag}" >> $GITHUB_OUTPUT
          fi

  run-e2e-tests:
    name: orchestrate-e2e-tests/run-e2e-tests
    needs: collect-images
    permissions:
      actions: 'write'
      contents: 'read'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger E2E Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow run test-suite-e2e-tests.yml \
            --repo ${{ github.repository }} \
            --ref ${{ github.ref }} \
            -f connector_version="${{ needs.collect-images.outputs.connector_version }}" \
            -f db_migration_version="${{ needs.collect-images.outputs.db_migration_version }}" \
            -f host_version="${{ needs.collect-images.outputs.host_version }}" \
            -f gateway_version="${{ needs.collect-images.outputs.gateway_version }}" \
            -f host_listener_version="${{ needs.collect-images.outputs.host_listener_version }}" \
            -f gateway_listener_version="${{ needs.collect-images.outputs.gateway_listener_version }}" \
            -f tx_sender_version="${{ needs.collect-images.outputs.tx_sender_version }}" \
            -f tfhe_worker_version="${{ needs.collect-images.outputs.tfhe_worker_version }}" \
            -f sns_worker_version="${{ needs.collect-images.outputs.sns_worker_version }}" \
            -f zkproof_worker_version="${{ needs.collect-images.outputs.zkproof_worker_version }}"
