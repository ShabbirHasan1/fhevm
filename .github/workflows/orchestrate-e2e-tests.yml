name: orchestrate-e2e-tests

on:
  workflow_run:
    workflows: ["trigger-all-builds"]
    types:
      - completed
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: {}

concurrency:
  group: orchestrate-e2e-tests-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  wait-for-all-builds:
    name: orchestrate-e2e-tests/wait-for-all-builds
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    permissions:
      actions: 'read'
      contents: 'read'
    runs-on: ubuntu-latest
    outputs:
      all-builds-complete: ${{ steps.check.outputs.all-builds-complete }}
      image-tag: ${{ steps.check.outputs.image-tag }}
    steps:
      - name: Check all builds completed
        id: check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            commit_sha="${{ github.event.pull_request.head.sha }}"
            echo "all-builds-complete=true" >> $GITHUB_OUTPUT
            echo "image-tag=${commit_sha:0:7}" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          commit_sha="${{ github.event.workflow_run.head_sha }}"
          echo "image-tag=${commit_sha:0:7}" >> $GITHUB_OUTPUT
          
          # Wait for all build workflows to complete for this commit
          required_workflows=("gateway-contracts-docker-build" "connector-docker-build" "host-docker-build" "gateway-docker-build")
          
          max_attempts=30
          attempt=1
          
          while [ $attempt -le $max_attempts ]; do
            echo "Attempt $attempt/$max_attempts: Checking all builds for commit ${commit_sha}"
            all_complete=true
            
            for workflow in "${required_workflows[@]}"; do
              echo "Checking workflow: ${workflow}"
              
              run_status=$(gh api \
                "repos/${{ github.repository }}/actions/workflows/${workflow}.yml/runs" \
                --jq ".workflow_runs[] | select(.head_sha == \"${commit_sha}\") | .conclusion" \
                | head -1)
              
              if [[ "$run_status" != "success" ]]; then
                echo "Workflow ${workflow} status: ${run_status:-pending}"
                all_complete=false
                break
              fi
            done
            
            if [ "$all_complete" = true ]; then
              echo "all-builds-complete=true" >> $GITHUB_OUTPUT
              exit 0
            fi
            
            echo "Not all builds complete yet, waiting 30 seconds..."
            sleep 30
            attempt=$((attempt + 1))
          done
          
          echo "Timeout waiting for builds to complete"
          echo "all-builds-complete=false" >> $GITHUB_OUTPUT
          exit 1

  run-e2e-tests:
    name: orchestrate-e2e-tests/run-e2e-tests
    needs: wait-for-all-builds
    if: ${{ needs.wait-for-all-builds.outputs.all-builds-complete == 'true' }}
    permissions:
      actions: 'write'
      contents: 'read'
    runs-on: ubuntu-latest
    steps:
      - name: Call E2E Tests Workflow
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const imageTag = '${{ needs.wait-for-all-builds.outputs.image-tag }}';
            
            const response = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'test-suite-e2e-tests.yml',
              ref: context.ref,
              inputs: {
                connector_version: imageTag,
                db_migration_version: imageTag,
                host_version: imageTag,
                gateway_version: imageTag,
                host_listener_version: imageTag,
                gateway_listener_version: imageTag,
                tx_sender_version: imageTag,
                tfhe_worker_version: imageTag,
                sns_worker_version: imageTag,
                zkproof_worker_version: imageTag
              }
            });
            
            console.log(`E2E tests workflow dispatched with image tag: ${imageTag}`);
            console.log('Response status:', response.status);
